{"version":3,"sources":["utils/famtreeService.js","components/TitleBar.js","components/Tree.js","components/InfoPanel.js","components/App.js","index.js","utils/tokenStore.js"],"names":["baseUrl","login","username","password","a","axios","post","token","data","setToken","getAllFamilyMembers","getToken","get","headers","Authorization","TitleBar","forwardRef","props","ref","stratifiedFamilies","selectedFamily","setSelectedFamily","useState","showLoginModal","setShowLoginModal","setUsername","setPassword","user","getTokenData","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","style","width","NavDropdown","title","isEmpty","find","sf","name","onSelect","key","marginRight","Item","disabled","fontWeight","fontSize","Divider","map","eventKey","active","Text","Button","size","marginLeft","onClick","Modal","show","centered","Body","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","then","Tree","heightOffset","rawTreeData","svgRef","useRef","useEffect","createD3Chart","height","nodeWidth","nodeHeight","current","dom","select","selectAll","remove","rootNode","nodes","tree","nodeSize","separation","b","spouse","famTree","zoomBase","append","call","zoom","scaleExtent","on","transform","attr","initialTranslate","getBoundingClientRect","graphBase","descendants","join","d","x","y","gender","links","source","text","spouseNodes","filter","des","rtd","InfoPanel","findParentRecursively","rawData","father","rd","mother","App","titleHeight","setTitleHeight","titleRef","panelHeight","setPanelHeight","panelRef","setRawTreeData","setStratifiedFamilies","stratifiedArray","family","userFamilyKey","filteredRawData","includes","root","stratify","parentId","stratifyOp","push","selectedFam","useLayoutEffect","offsetHeight","ReactDOM","render","StrictMode","document","getElementById","global","localStorage","atob","setItem","getItem","JSON","parse","split"],"mappings":"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","file":"static/js/main.55cd8348.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { getToken, setToken } from './tokenStore'\r\n\r\nconst baseUrl = 'https://famtreeserver.herokuapp.com'\r\n\r\nexport const login = async (username, password) => {\r\n  const { data: { token } } = await axios.post(`${baseUrl}/login`, { username, password })\r\n  setToken(token)\r\n}\r\n\r\nexport const getAllFamilyMembers = async () => {\r\n  const token = getToken()\r\n  const { data } = await axios.get(`${baseUrl}/family/all`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  )\r\n  return data\r\n}\r\n","import { forwardRef, useState } from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { login } from '../utils/famtreeService'\r\nimport { find, isEmpty, map } from 'lodash'\r\nimport { getTokenData, setToken } from '../utils/tokenStore'\r\n\r\nconst TitleBar = forwardRef((props, ref) => {\r\n  const { stratifiedFamilies, selectedFamily, setSelectedFamily } = props\r\n  const [showLoginModal, setShowLoginModal] = useState(false)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const user = getTokenData()\r\n  return (\r\n    <div ref={ref}>\r\n      <Navbar bg='light' variant='light' expand='lg'>\r\n        <Navbar.Brand>FamTree</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n        <Navbar.Collapse id='basic-navbar-nav'>\r\n          <Nav className='justify-content-end' style={{ width: '100%' }}>\r\n            <NavDropdown\r\n              title={selectedFamily && !isEmpty(stratifiedFamilies)\r\n                ? find(stratifiedFamilies, sf => sf.id === selectedFamily).data.name\r\n                : 'Family Root'}\r\n              id='basic-nav-dropdown'\r\n              onSelect={key => setSelectedFamily(key)}\r\n              style={{ marginRight: '5px' }}\r\n            >\r\n              <NavDropdown.Item disabled>\r\n                <div style={{ fontWeight: 'bold', fontSize: '1.2em' }}>\r\n                  Family Root\r\n                </div>\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              {stratifiedFamilies && map(stratifiedFamilies,\r\n                sf => <NavDropdown.Item key={sf.id} eventKey={sf.id} active={sf.id === selectedFamily}>{sf.data.name}</NavDropdown.Item>)}\r\n            </NavDropdown>\r\n            {user\r\n              ? <>\r\n                <Navbar.Text>{user.name}</Navbar.Text>\r\n                <Button variant='outline-danger' size='sm' style={{ marginLeft: '5px' }} onClick={() => setToken('')}>Log Out</Button>\r\n                {/* eslint-disable-next-line */}\r\n              </>\r\n              : <Button variant='outline-success' onClick={() => setShowLoginModal(true)}>Log In</Button>}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Modal show={showLoginModal} centered>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId='formBasicEmail'>\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control type='text' placeholder='Enter email' value={username} onChange={e => setUsername(e.target.value)} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='formBasicPassword'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type='password' placeholder='Password' value={password} onChange={e => setPassword(e.target.value)} />\r\n            </Form.Group>\r\n            <Button variant='primary' onClick={() => login(username, password).then(() => setShowLoginModal(false))}>\r\n              Login\r\n            </Button>\r\n          </Form>\r\n\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default TitleBar\r\n","import { useEffect, useRef } from 'react'\r\nimport { select } from 'd3-selection'\r\nimport { tree } from 'd3-hierarchy'\r\nimport { zoom } from 'd3-zoom'\r\nimport { find, isEmpty } from 'lodash'\r\n\r\nconst Tree = props => {\r\n  const { heightOffset = 0, rawTreeData, stratifiedFamilies, selectedFamily } = props\r\n\r\n  const svgRef = useRef(null)\r\n  useEffect(() => {\r\n    if (isEmpty(rawTreeData) || isEmpty(stratifiedFamilies) || isEmpty(selectedFamily)) return\r\n    createD3Chart(svgRef, rawTreeData, stratifiedFamilies, selectedFamily)\r\n  }, [rawTreeData, stratifiedFamilies, selectedFamily])\r\n  return (\r\n    <div style={{ height: `calc(100% - ${heightOffset}px)` }}>\r\n      <svg ref={svgRef} height='100%' width='100%' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tree\r\n\r\nconst nodeWidth = 150\r\nconst nodeHeight = 200\r\n\r\nconst createD3Chart = ({ current }, rawTreeData, stratifiedFamilies, selectedFamily) => {\r\n  const dom = select(current)\r\n  dom.selectAll('*').remove()\r\n  const rootNode = find(stratifiedFamilies, sf => sf.id === selectedFamily)\r\n  const famTree = tree(rootNode)\r\n    .nodeSize([nodeWidth * 2, nodeHeight * 2])\r\n    .separation((a, b) => b.data.spouse ? 1.5 : 1)\r\n  const nodes = famTree(rootNode)\r\n\r\n  const zoomBase = dom\r\n    .append('g')\r\n\r\n  // pan and zoom\r\n  dom\r\n    .call(zoom()\r\n      .scaleExtent([0.2, 1.25])\r\n      .on('zoom', ({ transform }) => zoomBase.attr('transform', transform)\r\n      ))\r\n\r\n  const initialTranslate = current.getBoundingClientRect().width / 2 - nodeWidth / 2\r\n  const graphBase = zoomBase\r\n    .append('g')\r\n    .attr('transform', `translate(${initialTranslate},0)`)\r\n\r\n  const descendants = nodes.descendants()\r\n\r\n  // node border\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('rect')\r\n    .data(descendants)\r\n    .join('rect')\r\n    .attr('x', d => d.x)\r\n    .attr('y', d => d.y)\r\n    .attr('width', nodeWidth)\r\n    .attr('height', nodeHeight)\r\n    .attr('class', d => d.data.gender)\r\n\r\n  // paths\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('path')\r\n    .data(nodes.links())\r\n    .join('path')\r\n    .style('stroke', 'blue')\r\n    .style('stroke-width', '2px')\r\n    .style('fill', 'none')\r\n    .attr('d', d => `\r\n    M ${d.source.x + nodeWidth / 2} ${d.source.y + nodeHeight}\r\n    V ${d.source.y + nodeHeight + (d.target.y - d.source.y - nodeHeight) / 2}\r\n    H ${d.target.x + nodeWidth / 2}\r\n    V ${d.target.y}\r\n    `)\r\n\r\n  // name\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('text')\r\n    .data(descendants)\r\n    .join('text')\r\n    .attr('x', d => d.x + 10)\r\n    .attr('y', d => d.y + nodeWidth + 20)\r\n    .text(d => d.data.name)\r\n    .style('font-weight', '500')\r\n\r\n  // image\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('image')\r\n    .data(descendants)\r\n    .join('image')\r\n    .attr('x', d => d.x)\r\n    .attr('y', d => d.y)\r\n    .attr('width', nodeWidth)\r\n    .attr('height', nodeWidth)\r\n    .attr('href', 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Solid_black.svg/240px-Solid_black.svg.png')\r\n\r\n  // spouse --------------------------------------------------------------------------------------\r\n  const spouseXOffset = nodeWidth + 20\r\n  const spouseNodes = descendants.filter(d => d.data.spouse)\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('rect')\r\n    .data(spouseNodes)\r\n    .join('rect')\r\n    .attr('x', d => d.x + spouseXOffset)\r\n    .attr('y', d => d.y)\r\n    .attr('width', nodeWidth)\r\n    .attr('height', nodeHeight)\r\n    .attr('class', d => find(rawTreeData, des => des.key === d.data.spouse).gender)\r\n\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('path')\r\n    .data(spouseNodes)\r\n    .join('path')\r\n    .style('stroke', 'red')\r\n    .style('stroke-width', 2)\r\n    .style('fill', 'none')\r\n    .attr('d', d => `M ${d.x + nodeWidth} ${d.y + nodeHeight / 2} h 20`)\r\n\r\n  // spouse name\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('text')\r\n    .data(spouseNodes)\r\n    .join('text')\r\n    .attr('x', d => d.x + spouseXOffset + 10)\r\n    .attr('y', d => d.y + nodeWidth + 20)\r\n    .text(d => find(rawTreeData, rtd => rtd.key === d.data.spouse).name)\r\n    .style('font-weight', '500')\r\n\r\n  // image\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('image')\r\n    .data(spouseNodes)\r\n    .join('image')\r\n    .attr('x', d => d.x + spouseXOffset)\r\n    .attr('y', d => d.y)\r\n    .attr('width', nodeWidth)\r\n    .attr('height', nodeWidth)\r\n    .attr('href', 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Solid_black.svg/240px-Solid_black.svg.png')\r\n}\r\n","import { forwardRef } from 'react'\r\n\r\nconst InfoPanel = forwardRef((props, ref) => {\r\n  return (\n    <div ref={ref}>\r\n      InfoPanel\r\n    </div>\n  )\r\n})\r\n\r\nexport default InfoPanel\r\n","import React, { useRef, useState, useLayoutEffect, useEffect } from 'react'\r\nimport TitleBar from './TitleBar'\r\nimport Tree from './Tree'\r\nimport InfoPanel from './InfoPanel'\r\nimport { getAllFamilyMembers } from '../utils/famtreeService'\r\nimport { filter, find, isEmpty } from 'lodash'\r\nimport { getTokenData } from '../utils/tokenStore'\r\nimport { stratify } from 'd3-hierarchy'\r\n\r\nimport '../css/App.css'\r\n\r\nconst App = props => {\r\n  const [titleHeight, setTitleHeight] = useState(0)\r\n  const titleRef = useRef(null)\r\n  const [panelHeight, setPanelHeight] = useState(0)\r\n  const panelRef = useRef(null)\r\n\r\n  const [rawTreeData, setRawTreeData] = useState({})\r\n  const [stratifiedFamilies, setStratifiedFamilies] = useState([])\r\n  const [selectedFamily, setSelectedFamily] = useState('')\r\n  useEffect(() => {\r\n    if (!isEmpty(rawTreeData)) return\r\n    getAllFamilyMembers().then(rawData => {\r\n      setRawTreeData(rawData)\r\n      const user = getTokenData()\r\n      const stratifiedArray = []\r\n      for (const userFamilyKey of user.family) {\r\n        const filteredRawData = filter(rawData, rd => rd.family.includes(userFamilyKey))\r\n\r\n        const stratifyOp = stratify()\r\n          .id(d => d.key)\r\n          .parentId(d => {\r\n            if (d.father) {\r\n              const father = find(rawData, rd => rd.key === d.father)\r\n              if (father.family.includes(userFamilyKey)) return d.father\r\n            }\r\n\r\n            if (d.mother) {\r\n              const mother = find(rawData, rd => rd.key === d.mother)\r\n              if (mother.family.includes(userFamilyKey)) return d.mother\r\n            }\r\n\r\n            return null\r\n          })\r\n\r\n        const root = stratifyOp(filteredRawData)\r\n        stratifiedArray.push(root)\r\n      }\r\n      const rootNode = findParentRecursively(user, rawData)\r\n      const selectedFam = rootNode.key\r\n      setSelectedFamily(selectedFam)\r\n      setStratifiedFamilies(stratifiedArray)\r\n    })\r\n  }, [])\r\n\r\n  useLayoutEffect(() => {\r\n    if (titleRef.current) { setTitleHeight(titleRef.current.offsetHeight) }\r\n    if (panelRef.current) { setPanelHeight(panelRef.current.offsetHeight) }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <TitleBar\r\n        ref={titleRef}\r\n        stratifiedFamilies={stratifiedFamilies}\r\n        selectedFamily={selectedFamily}\r\n        setSelectedFamily={setSelectedFamily}\r\n      />\r\n      <Tree\r\n        rawTreeData={rawTreeData}\r\n        stratifiedFamilies={stratifiedFamilies}\r\n        selectedFamily={selectedFamily}\r\n        heightOffset={titleHeight + panelHeight}\r\n      />\r\n      <InfoPanel\r\n        ref={panelRef}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst findParentRecursively = (user, rawData) => {\r\n  if (user.father) return findParentRecursively(find(rawData, rd => rd.key === user.father), rawData)\r\n  if (user.mother) return findParentRecursively(find(rawData, rd => rd.key === user.mother), rawData)\r\n  return user\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n","import { isEmpty } from 'lodash'\r\n\r\nconst { localStorage, atob } = global\r\n\r\nexport const setToken = token => localStorage.setItem('token', token)\r\n\r\nexport const getToken = () => localStorage.getItem('token')\r\n\r\nexport const getTokenData = () => {\r\n  const token = getToken()\r\n  if (isEmpty(token)) return\r\n  return JSON.parse(atob(token.split('.')[1]))\r\n}\r\n"],"sourceRoot":""}