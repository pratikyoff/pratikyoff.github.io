{"version":3,"sources":["components/TitleBar.js","components/InfoPanel.js","components/Tree.js","components/TreeAndPanel.js","components/App.js","index.js"],"names":["TitleBar","forwardRef","props","ref","style","display","justifyContent","fontWeight","marginRight","Button","InfoPanel","Tree","svgRef","useRef","useEffect","createD3Chart","data","height","width","nodeWidth","nodeHeight","current","dom","select","rootNode","hierarchy","nodes","tree","nodeSize","separation","a","b","spouse","famTree","zoomBase","append","call","zoom","scaleExtent","on","transform","attr","initialTranslate","getBoundingClientRect","graphBase","descendants","selectAll","join","d","x","y","links","source","target","text","name","spouseNodes","filter","TreeAndPanel","titleHeight","App","useState","setTitleHeight","titleRef","useLayoutEffect","offsetHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.129bcf91.chunk.js","sourcesContent":["import { forwardRef } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst TitleBar = forwardRef((props, ref) => {\r\n  return (\r\n    <div ref={ref} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n      <span style={{ fontWeight: 'bold', marginRight: 'auto' }}>FamTree</span>\r\n      <Button>Log In</Button>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default TitleBar\r\n","const InfoPanel = props => {\r\n  return null\r\n}\r\n\r\nexport default InfoPanel\n","import { useEffect, useRef } from 'react'\r\nimport { select } from 'd3-selection'\r\nimport { hierarchy, tree } from 'd3-hierarchy'\r\nimport { zoom } from 'd3-zoom'\r\n\r\nconst Tree = props => {\r\n  const svgRef = useRef(null)\r\n  useEffect(() => createD3Chart(svgRef, props.data), [props.data])\r\n  return (\r\n    <svg ref={svgRef} height='100%' width='100%' />\r\n  )\r\n}\r\n\r\nexport default Tree\r\n\r\nconst nodeWidth = 150\r\nconst nodeHeight = 200\r\n\r\nconst createD3Chart = ({ current }, data) => {\r\n  const dom = select(current)\r\n  const rootNode = hierarchy(data)\r\n  const famTree = tree(rootNode)\r\n    .nodeSize([nodeWidth * 2, nodeHeight * 2])\r\n    .separation((a, b) => b.data.spouse ? 1.5 : 1)\r\n  const nodes = famTree(rootNode)\r\n\r\n  const zoomBase = dom\r\n    .append('g')\r\n\r\n  // pan and zoom\r\n  dom\r\n    .call(zoom()\r\n      .scaleExtent([0.2, 1.25])\r\n      .on('zoom', ({ transform }) => zoomBase.attr('transform', transform)\r\n      ))\r\n\r\n  const initialTranslate = current.getBoundingClientRect().width / 2 - nodeWidth / 2\r\n  const graphBase = zoomBase\r\n    .append('g')\r\n    .attr('transform', `translate(${initialTranslate},0)`)\r\n\r\n  // border\r\n  // base\r\n  //   .append('g')\r\n  //   .append('rect')\r\n  //   .attr('x', 0)\r\n  //   .attr('y', 0)\r\n  //   .attr('width', graphWidth)\r\n  //   .attr('height', graphHeight)\r\n  //   .style('stroke', 'grey')\r\n  //   .style('fill', 'none')\r\n\r\n  const descendants = nodes.descendants()\r\n\r\n  // node border\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('rect')\r\n    .data(descendants)\r\n    .join('rect')\r\n    .attr('x', d => d.x)\r\n    .attr('y', d => d.y)\r\n    .attr('width', nodeWidth)\r\n    .attr('height', nodeHeight)\r\n    .style('fill', 'none')\r\n    .style('stroke', 'black')\r\n\r\n  // paths\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('path')\r\n    .data(nodes.links())\r\n    .join('path')\r\n    .style('stroke', 'blue')\r\n    .style('fill', 'none')\r\n    .attr('d', d => `\r\n    M ${d.source.x + nodeWidth / 2} ${d.source.y + nodeHeight}\r\n    V ${d.source.y + nodeHeight + (d.target.y - d.source.y - nodeHeight) / 2}\r\n    H ${d.target.x + nodeWidth / 2}\r\n    V ${d.target.y}\r\n    `)\r\n\r\n  // name\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('text')\r\n    .data(descendants)\r\n    .join('text')\r\n    .attr('x', d => d.x)\r\n    .attr('y', d => d.y + nodeWidth + 5)\r\n    .text(d => d.data.name)\r\n\r\n  // image\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('image')\r\n    .data(descendants)\r\n    .join('image')\r\n    .attr('x', d => d.x)\r\n    .attr('y', d => d.y)\r\n    .attr('width', nodeWidth)\r\n    .attr('height', nodeWidth)\r\n    .attr('href', 'https://www.pngitem.com/pimgs/m/150-1503945_transparent-user-png-default-user-image-png-png.png')\r\n\r\n  // spouse --------------------------------------------------------------------------------------\r\n  const spouseXOffset = nodeWidth + 20\r\n  const spouseNodes = descendants.filter(d => d.data.spouse)\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('rect')\r\n    .data(spouseNodes)\r\n    .join('rect')\r\n    .attr('x', d => d.x + spouseXOffset)\r\n    .attr('y', d => d.y)\r\n    .attr('width', nodeWidth)\r\n    .attr('height', nodeHeight)\r\n    .style('fill', 'none')\r\n    .style('stroke', 'black')\r\n\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('path')\r\n    .data(spouseNodes)\r\n    .join('path')\r\n    .style('stroke', 'red')\r\n    .style('stroke-width', 2)\r\n    .style('fill', 'none')\r\n    .attr('d', d => `M ${d.x + nodeWidth} ${d.y + nodeHeight / 2} h 20`)\r\n\r\n  // spouse name\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('text')\r\n    .data(spouseNodes)\r\n    .join('text')\r\n    .attr('x', d => d.x + spouseXOffset)\r\n    .attr('y', d => d.y + nodeWidth + 5)\r\n    .text(d => d.data.spouse.name)\r\n\r\n  // image\r\n  graphBase\r\n    .append('g')\r\n    .selectAll('image')\r\n    .data(spouseNodes)\r\n    .join('image')\r\n    .attr('x', d => d.x + spouseXOffset)\r\n    .attr('y', d => d.y)\r\n    .attr('width', nodeWidth)\r\n    .attr('height', nodeWidth)\r\n    .attr('href', 'https://www.pngitem.com/pimgs/m/150-1503945_transparent-user-png-default-user-image-png-png.png')\n}\r\n","import InfoPanel from './InfoPanel'\r\nimport Tree from './Tree'\r\n\r\nconst TreeAndPanel = props => {\r\n  const { titleHeight = 0, data } = props\r\n  return (\r\n    <div style={{ height: `calc(100% - ${titleHeight}px)` }}>\r\n      <Tree data={data} />\r\n      <InfoPanel />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TreeAndPanel\r\n","import React, { useRef, useState, useLayoutEffect } from 'react'\r\nimport TitleBar from './TitleBar'\r\nimport TreeAndPanel from './TreeAndPanel'\r\n\r\nimport data from '../testData/famTree.json'\r\n\r\nimport '../css/App.css'\r\n\r\nconst App = props => {\r\n  const [titleHeight, setTitleHeight] = useState(0)\r\n  const titleRef = useRef(null)\r\n\r\n  useLayoutEffect(() => {\r\n    if (titleRef.current) { setTitleHeight(titleRef.current.offsetHeight) }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <TitleBar ref={titleRef} />\r\n      <TreeAndPanel data={data} titleHeight={titleHeight} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}